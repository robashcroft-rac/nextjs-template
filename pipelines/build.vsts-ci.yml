name: 1.0.0$(Rev:.r)
trigger:
  - main
  - feature/*
  - fix/*

pool:
  vmImage: "windows-latest"

variables:
  WorkingDirectory: nextjs-template
  ApplicationName: nextjs-template
  NpeKeyvaultName: "RACWA-DCC-KEY-NPE-GITSAS"
  PrdKeyvaultName: "prd-keyvault"
  NpeAzureSubscription: "RACWA-IT-Non-Production"
  PrdAzureSubscription: "RACWA-IT-Production"
  DevAppSettingsNameSecretsPairs: "NEXT_PUBLIC_API_KEY=nexttemplate-api-key-dev,NEXT_PUBLIC_API_RESOURCE_ID=nexttemplate-api-resource-id-dev, NEXT_PUBLIC_APPINSIGHTS_INSTRUMENTATIONKEY=nexttemplate-appinsights-key,NEXT_PUBLIC_APPINSIGHTS_CONNECTIONSTRING=nexttemplate-appinsights-connsectionstring"
  SitAppSettingsNameSecretsPairs: ""
  UatAppSettingsNameSecretsPairs: ""
  PrdAppSettingsNameSecretsPairs: ""

steps:
  - task: NodeTool@0
    displayName: "Use Node 22.*"
    inputs:
      versionSpec: 22.x

  - task: npmAuthenticate@0
    displayName: NPm Authenticate
    inputs:
      workingFile: $(WorkingDirectory)/.npmrc

  - task: Npm@1
    displayName: Clean cache
    inputs:
      workingDir: $(WorkingDirectory)
      command: custom
      verbose: false
      customCommand: "cache clean --force"

  - task: Npm@1
    displayName: Install dependencies
    inputs:
      workingDir: $(WorkingDirectory)
      verbose: false
      customRegistry: useNpmrc

  - task: Npm@1
    displayName: Test
    inputs:
      workingDir: $(WorkingDirectory)
      command: custom
      verbose: false
      customCommand: "run test:ci"

  - task: PublishTestResults@2
    displayName: "Publish Jest Unit Test Results"
    inputs:
      testResultsFiles: "**/junit.xml"
      mergeTestResults: true
      testRunTitle: "Jest Unit Tests"
      failTaskOnFailedTests: true

  - task: PublishCodeCoverageResults@2
    displayName: "Publish code coverage from Jest tests"
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "**/cobertura-coverage.xml"
      failIfCoverageEmpty: true

  - task: AzureCli@2
    displayName: "DEV - Create the environment files"
    inputs:
      azureSubscription: $(NpeAzureSubscription)
      scriptType: "ps"
      scriptLocation: "scriptPath"
      scriptPath: "./$(WorkingDirectory)/pipelines/create-environment-files-from-input.ps1"
      arguments: "-keyvaultName $(NpeKeyvaultName) -secretsInput '$(DevAppSettingsNameSecretsPairs)' -environment dev -workingDirectory $(WorkingDirectory)"

  - task: Npm@1
    displayName: "DEV - Environment Build"
    inputs:
      workingDir: $(WorkingDirectory)
      command: custom
      verbose: false
      customCommand: "run build"

  - task: PublishBuildArtifacts@1
    displayName: "DEV - Publish Artifacts"
    inputs:
      PathtoPublish: "$(WorkingDirectory)/out"
      ArtifactName: "$(ApplicationName)-CI-DEV"
      publishLocation: Container

  - task: AzureCli@2
    displayName: "SIT - Create the environment files"
    inputs:
      azureSubscription: $(NpeAzureSubscription)
      scriptType: "ps"
      scriptLocation: "scriptPath"
      scriptPath: "./$(WorkingDirectory)/pipelines/create-environment-files-from-input.ps1"
      arguments: "-keyvaultName $(NpeKeyvaultName) -secretsInput '$(SitAppSettingsNameSecretsPairs)' -environment sit -workingDirectory $(WorkingDirectory)"

  - task: Npm@1
    displayName: "SIT - Environment Build"
    inputs:
      workingDir: $(WorkingDirectory)
      command: custom
      verbose: false
      customCommand: "run build"

  - task: PublishBuildArtifacts@1
    displayName: "SIT - Publish Artifacts"
    inputs:
      PathtoPublish: "$(WorkingDirectory)/out"
      ArtifactName: "$(ApplicationName)-CI-SIT"
      publishLocation: Container

  - task: AzureCli@2
    displayName: "UAT - Create the environment files"
    inputs:
      azureSubscription: $(NpeAzureSubscription)
      scriptType: "ps"
      scriptLocation: "scriptPath"
      scriptPath: "./$(WorkingDirectory)/pipelines/create-environment-files-from-input.ps1"
      arguments: "-keyvaultName $(NpeKeyvaultName) -secretsInput '$(UatAppSettingsNameSecretsPairs)' -environment uat -workingDirectory $(WorkingDirectory)"

  - task: Npm@1
    displayName: "UAT - Environment Build"
    inputs:
      workingDir: $(WorkingDirectory)
      command: custom
      verbose: false
      customCommand: "run build"

  - task: PublishBuildArtifacts@1
    displayName: "UAT - Publish Artifacts"
    inputs:
      PathtoPublish: "$(WorkingDirectory)/out"
      ArtifactName: "$(ApplicationName)-CI-UAT"
      publishLocation: Container

  - task: AzureCli@2
    displayName: "PRD - Create the environment files"
    inputs:
      azureSubscription: $(PrdAzureSubscription)
      scriptType: "ps"
      scriptLocation: "scriptPath"
      scriptPath: "./$(WorkingDirectory)/pipelines/create-environment-files-from-input.ps1"
      arguments: "-keyvaultName $(PrdKeyvaultName) -secretsInput '$(PrdAppSettingsNameSecretsPairs)' -environment prd -workingDirectory $(WorkingDirectory)"

  - task: Npm@1
    displayName: "PRD - Environment Build"
    inputs:
      workingDir: $(WorkingDirectory)
      command: custom
      verbose: false
      customCommand: "run build"

  - task: PublishBuildArtifacts@1
    displayName: "PRD - Publish Artifacts"
    inputs:
      PathtoPublish: "$(WorkingDirectory)/out"
      ArtifactName: "$(ApplicationName)-CI-PRD"
      publishLocation: Container
